openapi: 3.0.3
info:
  title: "${{values.api_entity_title}}"
  description: ${{values.api_description}}
  version: 1.0.0 # The version of the OpenAPI document (which is distinct from the OpenAPI Specification version or the API implementation version)
  license:
    name: private
  contact:
    email: api_maintainers@pstechnology.com
servers:
  - description: CrewPro Dev API Server
    url: http://dev.pstechnology.com/crewpro/${{values.api_system | replace("system:default/", "")}}/${{values.api_version}}
  - description: CrewPro Staging API Server
    url: http://staging.pstechnology.com/crewpro/${{values.api_system | replace("system:default/", "")}}/${{values.api_version}}

paths:
  "/${{values.api_entity | lower}}s":
    get:
      tags:
        - ${{values.api_entity_title }}
      summary: Returns all ${{values.api_entity}}s from the system that the user has access to
      description: Returns all ${{values.api_entity}}s from the system that the user has access to
      operationId: find${{values.api_entity | capitalize }}s
      responses:
        "200":
          description: ${{values.api_entity}} response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/${{values.api_entity | capitalize }}"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/RequestLimitExceeded"
        "500":
          $ref: "#/components/responses/InternalServiceError"
    post:
      tags:
        - ${{values.api_entity_title }}
      summary: Creates a new ${{values.api_entity}} in the store.  Duplicates are not allowed
      description: Creates a new ${{values.api_entity}} in the store.  Duplicates are not allowed
      operationId: add${{values.api_entity | capitalize }}
      requestBody:
        description: ${{values.api_entity | capitalize }} to add to the store
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/New${{values.api_entity | capitalize }}"
      responses:
        "200":
          description: ${{values.api_entity | capitalize}} response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/${{values.api_entity | capitalize }}"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/RequestLimitExceeded"
        "500":
          $ref: "#/components/responses/InternalServiceError"
  "/${{values.api_entity | lower}}/{id}":
    get:
      tags:
        - ${{values.api_entity_title }}
      summary:
        Returns a user based on a single ID, if the user does not have access
        to the ${{values.api_entity}}
      description:
        Returns a user based on a single ID, if the user does not have
        access to the ${{values.api_entity}}
      operationId: find${{values.api_entity | capitalize}}ById
      parameters:
        - name: id
          in: path
          description: ID of ${{values.api_entity}} to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: ${{values.api_entity | capitalize}} response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/${{values.api_entity | capitalize }}"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/RequestLimitExceeded"
        "500":
          $ref: "#/components/responses/InternalServiceError"
    put:
      tags:
        - ${{values.api_entity_title }}
      summary: Updates a single ${{values.api_entity}} based on the ID supplied
      description: Updates a single ${{values.api_entity}} based on the ID supplied
      operationId: update${{values.api_entity | capitalize }}
      parameters:
        - name: id
          in: path
          description: ID of ${{values.api_entity}} to delete
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ${{values.api_entity | capitalize }} to update
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/${{values.api_entity | capitalize }}"
      responses:
        "204":
          description: ${{values.api_entity}} updated
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "429":
          $ref: "#/components/responses/RequestLimitExceeded"
        "500":
          $ref: "#/components/responses/InternalServiceError"
    delete:
      tags:
        - ${{values.api_entity_title }}
      summary: Deletes a single ${{values.api_entity}} based on the ID supplied
      description: Deletes a single ${{values.api_entity}} based on the ID supplied
      operationId: delete${{values.api_entity | capitalize }}
      parameters:
        - name: id
          in: path
          description: ID of ${{values.api_entity}} to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: ${{values.api_entity}} deleted
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/RequestLimitExceeded"
        "500":
          $ref: "#/components/responses/InternalServiceError"
components:
  schemas:
    ${{values.api_entity | capitalize }}:
      allOf:
        - "$ref": "#/components/schemas/New${{values.api_entity | capitalize }}"
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
    New${{values.api_entity | capitalize }}:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string
    Errors:
      type: array
      items:
        $ref: "#/components/schemas/Error"
    Error:
      type: object
      required:
        - code
        - title
      properties:
        code:
          type: string
          description: Code for the Error (used for i18N)
        title:
          type: string
          description: A short, human-readable summary of Error
        detail:
          type: string
          description: Details of the Error
  
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    Unauthorized:
      description: Unauthorized Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    Forbidden:
      description: Forbidden Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    RequestLimitExceeded:
      description: Request Limit Exceeded
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    InternalServiceError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

