apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: crewpro-api-bindings-template
  title: CrewPro API bindings
  description: Generates api-bindings project from API specification
  tags:
    - recommended
    - java-17
    - maven
    - api-bindings
    - crewpro
spec:
  owner: group:up-pst/cnx-pst-team
  type: component

  parameters:
    - title: Provide some simple information
      required:
        - component_group_id
        - component_id
        - owner
        - api
      properties:
        component_group_id:
          title: Group Name
          type: string
          description: Group this component belongs to
          default: com.pst
          enum:
            - com.pst
            - com.pst.app.crewpro
          enumNames:
            - "PST"
            - "PST CrewPro"
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        api:
          title: API
          type: string
          description: API for which bindings will be generated
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            catalogFilter:
              - kind: API
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedOwners: ["UP-PST"]
            allowedHosts: ["github.com"]

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          group_id: ${{ parameters.component_group_id }}
          artifact_id: ${{ parameters.api.name | trim | lower | replace("_", "-") | replace(".", "_")}}
          api_spec_location: ${{ parameters.api.metadata.annotations.backstage.io/source-location }}
          java_package_name: ${{ parameters.component_group_id }}.${{ parameters.api.name | trim | lower | replace("-", "_") }}
          owner: ${{ parameters.owner }}
          source_control_url: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        # Remove if you want it to be master, all public repos have pivoted to main as the default branch now
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
